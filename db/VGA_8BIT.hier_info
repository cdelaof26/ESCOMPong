|VGA_8bit
clock => ps2_keyboard:keyboard.clk
clock => vga_clk.CLK
clock => next_read_code.CLK
clock => player_2_position[0].CLK
clock => player_2_position[1].CLK
clock => player_2_position[2].CLK
clock => player_2_position[3].CLK
clock => player_2_position[4].CLK
clock => player_2_position[5].CLK
clock => player_2_position[6].CLK
clock => player_2_position[7].CLK
clock => player_2_position[8].CLK
clock => player_1_position[0].CLK
clock => player_1_position[1].CLK
clock => player_1_position[2].CLK
clock => player_1_position[3].CLK
clock => player_1_position[4].CLK
clock => player_1_position[5].CLK
clock => player_1_position[6].CLK
clock => player_1_position[7].CLK
clock => player_1_position[8].CLK
clock => player_2_position_aux[0].CLK
clock => player_2_position_aux[1].CLK
clock => player_2_position_aux[2].CLK
clock => player_2_position_aux[3].CLK
clock => player_2_position_aux[4].CLK
clock => player_2_position_aux[5].CLK
clock => player_2_position_aux[6].CLK
clock => player_2_position_aux[7].CLK
clock => player_2_position_aux[8].CLK
clock => player_2_position_aux[9].CLK
clock => player_2_position_aux[10].CLK
clock => player_2_position_aux[11].CLK
clock => player_2_position_aux[12].CLK
clock => player_2_position_aux[13].CLK
clock => player_2_position_aux[14].CLK
clock => player_2_position_aux[15].CLK
clock => player_2_position_aux[16].CLK
clock => player_2_position_aux[17].CLK
clock => player_2_position_aux[18].CLK
clock => player_2_position_aux[19].CLK
clock => player_2_position_aux[20].CLK
clock => player_2_position_aux[21].CLK
clock => player_2_position_aux[22].CLK
clock => player_2_position_aux[23].CLK
clock => player_2_position_aux[24].CLK
clock => player_2_position_aux[25].CLK
clock => player_2_position_aux[26].CLK
clock => player_2_position_aux[27].CLK
clock => player_2_position_aux[28].CLK
clock => player_2_position_aux[29].CLK
clock => player_2_position_aux[30].CLK
clock => player_2_position_aux[31].CLK
clock => player_1_position_aux[0].CLK
clock => player_1_position_aux[1].CLK
clock => player_1_position_aux[2].CLK
clock => player_1_position_aux[3].CLK
clock => player_1_position_aux[4].CLK
clock => player_1_position_aux[5].CLK
clock => player_1_position_aux[6].CLK
clock => player_1_position_aux[7].CLK
clock => player_1_position_aux[8].CLK
clock => player_1_position_aux[9].CLK
clock => player_1_position_aux[10].CLK
clock => player_1_position_aux[11].CLK
clock => player_1_position_aux[12].CLK
clock => player_1_position_aux[13].CLK
clock => player_1_position_aux[14].CLK
clock => player_1_position_aux[15].CLK
clock => player_1_position_aux[16].CLK
clock => player_1_position_aux[17].CLK
clock => player_1_position_aux[18].CLK
clock => player_1_position_aux[19].CLK
clock => player_1_position_aux[20].CLK
clock => player_1_position_aux[21].CLK
clock => player_1_position_aux[22].CLK
clock => player_1_position_aux[23].CLK
clock => player_1_position_aux[24].CLK
clock => player_1_position_aux[25].CLK
clock => player_1_position_aux[26].CLK
clock => player_1_position_aux[27].CLK
clock => player_1_position_aux[28].CLK
clock => player_1_position_aux[29].CLK
clock => player_1_position_aux[30].CLK
clock => player_1_position_aux[31].CLK
clock => font_16x16_bold:name.clock
reset => player_2_position[0].PRESET
reset => player_2_position[1].ACLR
reset => player_2_position[2].PRESET
reset => player_2_position[3].ACLR
reset => player_2_position[4].ACLR
reset => player_2_position[5].ACLR
reset => player_2_position[6].ACLR
reset => player_2_position[7].ACLR
reset => player_2_position[8].PRESET
reset => player_1_position[0].PRESET
reset => player_1_position[1].ACLR
reset => player_1_position[2].PRESET
reset => player_1_position[3].ACLR
reset => player_1_position[4].ACLR
reset => player_1_position[5].ACLR
reset => player_1_position[6].ACLR
reset => player_1_position[7].ACLR
reset => player_1_position[8].PRESET
reset => player_2_position_aux[0].PRESET
reset => player_2_position_aux[1].ACLR
reset => player_2_position_aux[2].PRESET
reset => player_2_position_aux[3].ACLR
reset => player_2_position_aux[4].ACLR
reset => player_2_position_aux[5].ACLR
reset => player_2_position_aux[6].ACLR
reset => player_2_position_aux[7].ACLR
reset => player_2_position_aux[8].PRESET
reset => player_2_position_aux[9].ACLR
reset => player_2_position_aux[10].ACLR
reset => player_2_position_aux[11].ACLR
reset => player_2_position_aux[12].ACLR
reset => player_2_position_aux[13].ACLR
reset => player_2_position_aux[14].ACLR
reset => player_2_position_aux[15].ACLR
reset => player_2_position_aux[16].ACLR
reset => player_2_position_aux[17].ACLR
reset => player_2_position_aux[18].ACLR
reset => player_2_position_aux[19].ACLR
reset => player_2_position_aux[20].ACLR
reset => player_2_position_aux[21].ACLR
reset => player_2_position_aux[22].ACLR
reset => player_2_position_aux[23].ACLR
reset => player_2_position_aux[24].ACLR
reset => player_2_position_aux[25].ACLR
reset => player_2_position_aux[26].ACLR
reset => player_2_position_aux[27].ACLR
reset => player_2_position_aux[28].ACLR
reset => player_2_position_aux[29].ACLR
reset => player_2_position_aux[30].ACLR
reset => player_2_position_aux[31].ACLR
reset => player_1_position_aux[0].PRESET
reset => player_1_position_aux[1].ACLR
reset => player_1_position_aux[2].PRESET
reset => player_1_position_aux[3].ACLR
reset => player_1_position_aux[4].ACLR
reset => player_1_position_aux[5].ACLR
reset => player_1_position_aux[6].ACLR
reset => player_1_position_aux[7].ACLR
reset => player_1_position_aux[8].PRESET
reset => player_1_position_aux[9].ACLR
reset => player_1_position_aux[10].ACLR
reset => player_1_position_aux[11].ACLR
reset => player_1_position_aux[12].ACLR
reset => player_1_position_aux[13].ACLR
reset => player_1_position_aux[14].ACLR
reset => player_1_position_aux[15].ACLR
reset => player_1_position_aux[16].ACLR
reset => player_1_position_aux[17].ACLR
reset => player_1_position_aux[18].ACLR
reset => player_1_position_aux[19].ACLR
reset => player_1_position_aux[20].ACLR
reset => player_1_position_aux[21].ACLR
reset => player_1_position_aux[22].ACLR
reset => player_1_position_aux[23].ACLR
reset => player_1_position_aux[24].ACLR
reset => player_1_position_aux[25].ACLR
reset => player_1_position_aux[26].ACLR
reset => player_1_position_aux[27].ACLR
reset => player_1_position_aux[28].ACLR
reset => player_1_position_aux[29].ACLR
reset => player_1_position_aux[30].ACLR
reset => player_1_position_aux[31].ACLR
reset => vga_clk.ACLR
reset => hcount[0].ACLR
reset => hcount[1].ACLR
reset => hcount[2].ACLR
reset => hcount[3].ACLR
reset => hcount[4].ACLR
reset => hcount[5].ACLR
reset => hcount[6].ACLR
reset => hcount[7].ACLR
reset => hcount[8].ACLR
reset => hcount[9].ACLR
reset => vcount[0].ACLR
reset => vcount[1].ACLR
reset => vcount[2].ACLR
reset => vcount[3].ACLR
reset => vcount[4].ACLR
reset => vcount[5].ACLR
reset => vcount[6].ACLR
reset => vcount[7].ACLR
reset => vcount[8].ACLR
reset => vcount[9].ACLR
reset => draw_border.ACLR
reset => next_read_code.ENA
reset => char_col[0].ENA
reset => draw_player.ENA
reset => char_row[3].ENA
reset => char_row[2].ENA
reset => char_row[1].ENA
reset => char_row[0].ENA
reset => id_char[6].ENA
reset => id_char[5].ENA
reset => id_char[4].ENA
reset => id_char[3].ENA
reset => id_char[2].ENA
reset => id_char[1].ENA
reset => id_char[0].ENA
reset => char_col[3].ENA
reset => char_col[2].ENA
reset => char_col[1].ENA
PS2_CLOCK => ps2_keyboard:keyboard.ps2_clk
PS2_DATA => ps2_keyboard:keyboard.ps2_data
disp_RGB[0] <= disp_RGB.DB_MAX_OUTPUT_PORT_TYPE
disp_RGB[1] <= disp_RGB.DB_MAX_OUTPUT_PORT_TYPE
disp_RGB[2] <= disp_RGB.DB_MAX_OUTPUT_PORT_TYPE
hsync <= LessThan8.DB_MAX_OUTPUT_PORT_TYPE
vsync <= LessThan9.DB_MAX_OUTPUT_PORT_TYPE


|VGA_8bit|ps2_keyboard:keyboard
clk => debounce:debounce_ps2_clk.clk
clk => ps2_code[0]~reg0.CLK
clk => ps2_code[1]~reg0.CLK
clk => ps2_code[2]~reg0.CLK
clk => ps2_code[3]~reg0.CLK
clk => ps2_code[4]~reg0.CLK
clk => ps2_code[5]~reg0.CLK
clk => ps2_code[6]~reg0.CLK
clk => ps2_code[7]~reg0.CLK
clk => ps2_code_new~reg0.CLK
clk => count_idle[0].CLK
clk => count_idle[1].CLK
clk => count_idle[2].CLK
clk => count_idle[3].CLK
clk => count_idle[4].CLK
clk => count_idle[5].CLK
clk => count_idle[6].CLK
clk => count_idle[7].CLK
clk => count_idle[8].CLK
clk => count_idle[9].CLK
clk => count_idle[10].CLK
clk => count_idle[11].CLK
clk => sync_ffs[0].CLK
clk => sync_ffs[1].CLK
clk => debounce:debounce_ps2_data.clk
ps2_clk => sync_ffs[0].DATAIN
ps2_data => sync_ffs[1].DATAIN
ps2_code_new <= ps2_code_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[0] <= ps2_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[1] <= ps2_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[2] <= ps2_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[3] <= ps2_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[4] <= ps2_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[5] <= ps2_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[6] <= ps2_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[7] <= ps2_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|VGA_8bit|ps2_keyboard:keyboard|debounce:debounce_ps2_clk
clk => result~reg0.CLK
clk => counter_out[0].CLK
clk => counter_out[1].CLK
clk => counter_out[2].CLK
clk => counter_out[3].CLK
clk => counter_out[4].CLK
clk => counter_out[5].CLK
clk => counter_out[6].CLK
clk => counter_out[7].CLK
clk => counter_out[8].CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
button => flipflops[0].DATAIN
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE


|VGA_8bit|ps2_keyboard:keyboard|debounce:debounce_ps2_data
clk => result~reg0.CLK
clk => counter_out[0].CLK
clk => counter_out[1].CLK
clk => counter_out[2].CLK
clk => counter_out[3].CLK
clk => counter_out[4].CLK
clk => counter_out[5].CLK
clk => counter_out[6].CLK
clk => counter_out[7].CLK
clk => counter_out[8].CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
button => flipflops[0].DATAIN
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE


|VGA_8bit|font_16x16_bold:name
clock => data_1~reg0.CLK
char_0[0] => Mux0.IN32774
char_0[1] => Mux0.IN32773
char_0[2] => Mux0.IN32772
char_0[3] => Mux0.IN32771
char_0[4] => Mux0.IN32770
char_0[5] => Mux0.IN32769
char_0[6] => Mux0.IN32768
row_0[0] => Mux0.IN32778
row_0[1] => Mux0.IN32777
row_0[2] => Mux0.IN32776
row_0[3] => Mux0.IN32775
column_0[0] => Mux0.IN32782
column_0[1] => Mux0.IN32781
column_0[2] => Mux0.IN32780
column_0[3] => Mux0.IN32779
data_1 <= data_1~reg0.DB_MAX_OUTPUT_PORT_TYPE


